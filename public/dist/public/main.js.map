{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/task/task.component.css","webpack:///./src/app/task/task.component.html","webpack:///./src/app/task/task.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"body{\\n    max-width: 1000px;\\n    padding: 20px;\\n    margin: auto;\\n}\\n\\nimg{\\n    width: 100%;\\n    margin: 10px;\\n    border: 1px solid rgb(151, 151, 151);\\n    border-radius: 3px;\\n}\\n\\n.comments{\\n    margin: 10px;\\n}\\n\\n.post{\\n    padding: 10px 0;\\n}\\n\\n#main{\\n    height: 500px;\\n    overflow: scroll;\\n    border: 2px solid gray;\\n    border-radius: 3px;\\n    background-color: rgb(199, 199, 199);\\n    padding: 30px;\\n    margin: 20px 0;\\n}\"","module.exports = \"<!DOCTYPE html>\\n<html lang='en'>\\n\\n<head>\\n\\n  <meta charset='UTF-8'>\\n  <meta name='viewport' content='width=device-width, initial-scale=1.0'>\\n  <meta http-equiv='X-UA-Compatible' content='ie=edge'>\\n  <title>Rate my Cakes</title>\\n\\n  <link rel='stylesheet' href='https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css' integrity='sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO'\\n    crossorigin='anonymous'> <!-- Bootstrap -->\\n  <script src='https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js'></script> <!-- jQuery -->\\n  <script src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js' integrity='sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49'\\n    crossorigin='anonymous'></script> <!-- Bootstrap -->\\n  <script src='https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js' integrity='sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy'\\n    crossorigin='anonymous'></script> <!-- Bootstrap -->\\n\\n  <script> /* JS */\\n\\n    $(document).ready(function () {\\n\\n    })\\n\\n  </script>\\n\\n</head>\\n\\n<body>\\n  <div style=\\\"text-align:center\\\">\\n    <h1>Rate my Cakes</h1>\\n  </div>\\n  <h3>New Cake</h3>\\n  <form (submit)=\\\"create()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"name\\\">Your Name:</label>\\n      <input [(ngModel)]=\\\"newPost.name\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"newPost.name\\\" id=\\\"name\\\" placeholder=\\\"Enter name\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"image\\\">Photo url:</label>\\n      <input class=\\\"form-control\\\" [(ngModel)]=\\\"newPost.image\\\" id=\\\"image\\\" name=\\\"newPost.image\\\" type=\\\"text\\\" placeholder=\\\"url\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"description\\\">Description:</label>\\n      <input [(ngModel)]=\\\"newPost.description\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"newPost.description\\\" id=\\\"description\\\"\\n        placeholder=\\\"Description\\\">\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n  </form>\\n\\n  <hr>\\n\\n  <div class=\\\"form-group\\\">\\n      <label for=\\\"search\\\">Search by Poster:</label>\\n      <input class=\\\"form-control\\\" (keyup)=\\\"search($event)\\\" id=\\\"image\\\" name=\\\"search\\\" type=\\\"text\\\" placeholder=\\\"poster name\\\">\\n  </div>\\n\\n  <div id=\\\"main\\\">\\n    <div *ngFor=\\\"let post of posts\\\" class=\\\"post row\\\">\\n      <div class=\\\"col-4\\\">\\n        <img src=\\\"{{post.image}}\\\" alt=\\\"Cake\\\">\\n        <h6>{{ post.description }}</h6>\\n        <h4>Posted by: {{ post.poster_name }}</h4>\\n        <button class=\\\"btn-sm btn-info\\\" (click)=\\\"showDetails(post._id)\\\">View Cake</button>\\n      </div>\\n      <div class=\\\"col comments\\\">\\n        <form (submit)=\\\"comment(post._id)\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Your Name:</label>\\n            <input [(ngModel)]=\\\"newComment.commenter_name\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"newComment.commenter_name\\\"\\n              id=\\\"name\\\" placeholder=\\\"Enter name\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"comment\\\">Comment:</label>\\n            <input [(ngModel)]=\\\"newComment.comment\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"newComment.comment\\\" id=\\\"comment\\\"\\n              placeholder=\\\"Comment\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"rating\\\">Star Rating</label>\\n            <select [(ngModel)]=\\\"newComment.rating\\\" name=\\\"newComment.rating\\\" class=\\\"form-control\\\" id=\\\"rating\\\">\\n              <option>1</option>\\n              <option>2</option>\\n              <option>3</option>\\n              <option>4</option>\\n              <option>5</option>\\n            </select>\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <app-task *ngIf=\\\"post\\\" [postToShow]=\\\"post\\\" (anotherTaskEventEmitter)=\\\"close($event)\\\" (aTaskEventEmitter)=\\\"commentFromChild($event)\\\"></app-task>\\n\\n</body>\\n\\n\\n</html>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { discardPeriodicTasks } from '@angular/core/testing';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  posts: any\n  post = null\n  newPost = {\n    name: \"\",\n    description: \"\",\n    image: \"\"\n  }\n  newComment = {\n    commenter_name: \"\",\n    comment: \"\",\n    rating: 0\n  }\n\n  constructor(private _httpService: HttpService){}\n\n  ngOnInit(){\n    this.allPosts()\n  }\n\n  create(){\n    let observable = this._httpService.newPost(this.newPost)\n    observable.subscribe(data => {\n      console.log(\"data\", data)\n      this.allPosts()\n    })\n    this.newPost.name = \"\"\n    this.newPost.description = \"\"\n    this.newPost.image = \"\"\n  }\n\n  allPosts(){\n    let observable = this._httpService.getPosts()\n\n    observable.subscribe(data => {\n      this.posts = data[\"posts\"]\n    })\n  }\n\n  comment(id){\n    let observable = this._httpService.newComment({id: id, comment: this.newComment})\n    observable.subscribe(data => {\n      this.allPosts()\n    })\n    this.newComment.commenter_name = \"\"\n    this.newComment.comment = \"\"\n    this.newComment.rating = 0\n  }\n\n  commentFromChild(data){\n    this.newComment.commenter_name = data.comment.commenter_name\n    this.newComment.comment = data.comment.comment\n    this.newComment.rating = data.comment.rating\n    this.comment(data.id)\n    this.showDetails(data.id)\n  }\n\n  showDetails(id){\n    let observable = this._httpService.getById(id)\n\n    observable.subscribe(data => {\n      this.post = data[\"post\"]\n    })\n  }\n\n  close(data){\n    this.post = null\n  }\n\n  search(data){\n    //console.log(data.target.value)\n    if(data.target.value.length > 0){\n      let observable = this._httpService.getByPoster(data.target.value)\n      observable.subscribe(data => {\n        //console.log(data)\n        this.posts = data[\"posts\"]\n      })\n    } else {\n      this.allPosts()\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { TaskComponent } from './task/task.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  constructor(private _http: HttpClient) {}\n\n  newPost(data){\n    return this._http.post('/', data)\n  }\n\n  getPosts(){\n    return this._http.get('/posts');\n  }\n\n  newComment(data){\n    return this._http.post('/' + data.id, data.comment)\n  }\n\n  getById(id){\n    return this._http.get(\"/\" + id)\n  }\n\n  getByPoster(name){\n    return this._http.get(\"/poster/\" + name)\n  }\n}\n","module.exports = \"\\nimg{\\n    width: 100%;\\n    margin: 10px;\\n    border: 1px solid rgb(151, 151, 151);\\n    border-radius: 3px;\\n}\\n\\n.comment{\\n    border: 1px solid black;\\n    border-radius: 3px;\\n    background-color: rgb(218, 218, 218);\\n    margin: 10px 0;\\n    padding: 10px;\\n}\\n\\n.comments{\\n    margin-top: 10px;\\n    padding-left: 10px;\\n    padding-right: 10px;\\n    padding-bottom: 10px;\\n    overflow: scroll;\\n    max-height: 750px;\\n    background: white;\\n    border-radius: 3px;\\n}\\n\\n#content{\\n    position: relative;\\n    top: -520px;\\n    min-height: 800px;\\n    width: 960px;\\n    border: 2px solid gray;\\n    border-radius: 3px;\\n    background-color: rgb(199, 199, 199);\\n    padding: 30px;\\n    margin: 20px 0;\\n}\"","module.exports = \"<div id=\\\"content\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-8\\\">\\n      <img src=\\\"{{ postToShow.image }}\\\" alt=\\\"Cake\\\">\\n      <h3>{{ postToShow.description }}</h3>\\n      <h3>Average rating: {{ avg_rating }}</h3>\\n      <h2>Posted by: {{ postToShow.poster_name }}</h2>\\n      <hr>\\n      <button class=\\\"btn btn-warning\\\" (click)=\\\"close($event)\\\">Back to Cakes</button>\\n    </div>\\n    <div class=\\\"col\\\">\\n      <div class=\\\"comments\\\">\\n        <div *ngFor=\\\"let comment of postToShow.comments\\\" class=\\\"comment\\\">\\n          <p>{{ comment.comment }}</p>\\n          <p>Rating: {{ comment.rating }}</p>\\n          <h5>- {{ comment.commenter_name }}</h5>\\n        </div>\\n        <form (submit)=\\\"triggerEvent($event)\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Your Name:</label>\\n            <input [(ngModel)]=\\\"newComment.commenter_name\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"newComment.commenter_name\\\"\\n              id=\\\"name\\\" placeholder=\\\"Enter name\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"comment\\\">Comment:</label>\\n            <input [(ngModel)]=\\\"newComment.comment\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"newComment.comment\\\" id=\\\"comment\\\"\\n              placeholder=\\\"Comment\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"rating\\\">Star Rating</label>\\n            <select [(ngModel)]=\\\"newComment.rating\\\" name=\\\"newComment.rating\\\" class=\\\"form-control\\\" id=\\\"rating\\\">\\n              <option>1</option>\\n              <option>2</option>\\n              <option>3</option>\\n              <option>4</option>\\n              <option>5</option>\\n            </select>\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent implements OnInit {\n\n  @Input() postToShow: any\n  @Output() aTaskEventEmitter = new EventEmitter(); \n  @Output() anotherTaskEventEmitter = new EventEmitter()\n\n  constructor() { }\n\n  newComment = {\n    commenter_name: \"\",\n    comment: \"\",\n    rating: 0\n  }\n  avg_rating = 0;\n\n  ngOnInit() {\n    this.findAvg()\n  }\n\n  close(){\n    this.anotherTaskEventEmitter.emit(\"close\");\n  }\n\n  findAvg(){\n    let sum = 0\n    for(let comment of this.postToShow.comments){\n      sum += comment.rating\n    }\n    this.avg_rating = sum / this.postToShow.comments.length\n  }\n\n  triggerEvent(){\n    this.aTaskEventEmitter.emit({id: this.postToShow._id, comment: this.newComment});\n    this.newComment = {\n      commenter_name: \"\",\n      comment: \"\",\n      rating: 0\n    }\n    this.findAvg()\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}